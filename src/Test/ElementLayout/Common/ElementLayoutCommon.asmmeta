#include "versions.h"
#include "ndp20.versions.h"

.assembly extern PresentationCore
{
	.publickeytoken = PRESENTATIONCORE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver PRESENTATIONCORE_ASSEMBLY_VERSION_IL
}
.assembly extern PresentationFramework
{
	.publickeytoken = PRESENTATIONFRAMEWORK_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver PRESENTATIONFRAMEWORK_ASSEMBLY_VERSION_IL
}
.assembly extern TestRuntime
{
	.publickeytoken = TESTRUNTIME_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver TESTRUNTIME_ASSEMBLY_VERSION_IL
}
.assembly extern WindowsBase
{
	.publickeytoken = WINDOWSBASE_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver WINDOWSBASE_ASSEMBLY_VERSION_IL
}
.assembly extern mscorlib
{
	.publickeytoken = MSCORLIB_20_ASSEMBLY_PUBLIC_KEY_TOKEN_IL
	.ver MSCORLIB_20_ASSEMBLY_VERSION_IL
}
.assembly ElementLayoutCommon
{
	.custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = { bool(true) }
	.custom instance void [mscorlib]System.Runtime.InteropServices.ComVisibleAttribute::.ctor(bool) = { bool(false) }
	.publickey = ELEMENTLAYOUTCOMMON_ASSEMBLY_PUBLIC_KEY_IL
	.hash algorithm 0x00008004
	.ver ELEMENTLAYOUTCOMMON_ASSEMBLY_VERSION_IL
}
.namespace ElementLayout.TestLibrary
{
	.class public CanvasCommon
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point GetCanvasSize(class [PresentationFramework]System.Windows.Controls.Canvas canvas)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point GetChildPosition(class [PresentationFramework]System.Windows.Controls.Canvas canvas, class [PresentationCore]System.Windows.UIElement child)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point GetExpectedPosition(class [PresentationFramework]System.Windows.Controls.Canvas canvas, class [PresentationCore]System.Windows.UIElement child)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement CanvasContent()
		{
			ret
		}
		.method public static hidebysig 
			bool CanvasRelayoutOnPropChangeTestVerifier(class [PresentationFramework]System.Windows.Window w, class [TestRuntime]Microsoft.Test.Logging.TestLog log, bool relayoutOccurred, valuetype [WindowsBase]System.Windows.Point expVal)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement CanvasBasicContent()
		{
			ret
		}
		.method public static hidebysig 
			bool CanvasSizeVerifier(class [PresentationFramework]System.Windows.Window w, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
		{
			ret
		}
		.method public static hidebysig 
			bool CanvasChildPositionVerifier(class [PresentationFramework]System.Windows.Window w, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ElementClipHelper
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement AddTestContent(string testitem)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement staticContent()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public GridCommon
		extends [mscorlib]System.Object
	{
		.class nested public GridChildrenCollectionTestCommon
			extends [mscorlib]System.Object
		{
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.FrameworkElement CommonContent()
			{
				ret
			}
			.method public static hidebysig 
				class [mscorlib]System.Collections.ArrayList GetActualIDsForChildren(class [PresentationFramework]System.Windows.Controls.Grid g)
			{
				ret
			}
			.method public static hidebysig 
				class [mscorlib]System.Collections.ArrayList GetExpectedIDsForChildren(class [PresentationFramework]System.Windows.Controls.Grid g)
			{
				ret
			}
			.method public static hidebysig 
				string GetList(class [mscorlib]System.Collections.ArrayList list)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
		}
		.class nested public GridColumnRowSpanTestCommon
			extends [mscorlib]System.Object
		{
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.FrameworkElement CommonContent(int32 numSpan, int32 cell)
			{
				ret
			}
			.method public static hidebysig 
				bool GridColumnRowSpanTestVerifier(class [PresentationFramework]System.Windows.Controls.Grid g, int32 _numSpan, int32 _cell, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
			{
				ret
			}
			.method public static hidebysig 
				bool Equal(float64 exp, float64 act)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
		}
		.class nested public GridDefinitionCollectionTestCommon
			extends [mscorlib]System.Object
		{
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.FrameworkElement CommonContent()
			{
				ret
			}
			.method public static hidebysig 
				class [mscorlib]System.Collections.ArrayList GetActualIDsForColumn(class [PresentationFramework]System.Windows.Controls.Grid g)
			{
				ret
			}
			.method public static hidebysig 
				class [mscorlib]System.Collections.ArrayList GetExpectedIDsForColumn(class [PresentationFramework]System.Windows.Controls.Grid g)
			{
				ret
			}
			.method public static hidebysig 
				class [mscorlib]System.Collections.ArrayList GetActualIDsForRow(class [PresentationFramework]System.Windows.Controls.Grid g)
			{
				ret
			}
			.method public static hidebysig 
				class [mscorlib]System.Collections.ArrayList GetExpectedIDsForRow(class [PresentationFramework]System.Windows.Controls.Grid g)
			{
				ret
			}
			.method public static hidebysig 
				string GetList(class [mscorlib]System.Collections.ArrayList list)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
		}
		.class nested public GridMinMaxSizeVerification
			extends [mscorlib]System.Object
		{
			.method public static hidebysig 
				bool GridMinMaxSizeVerifier(class [PresentationFramework]System.Windows.Controls.Grid g, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
		}
		.class nested public GridRTLSupportTest
			extends [mscorlib]System.Object
		{
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.Controls.Grid ColumnRowTest(class [PresentationFramework]System.Windows.Controls.Grid g)
			{
				ret
			}
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.Controls.Grid LeftSpacingTest(class [PresentationFramework]System.Windows.Controls.Grid g)
			{
				ret
			}
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.Controls.Grid RightSpacingTest(class [PresentationFramework]System.Windows.Controls.Grid g)
			{
				ret
			}
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.Controls.Grid SpanningTest(class [PresentationFramework]System.Windows.Controls.Grid g)
			{
				ret
			}
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.Controls.Grid TestWithTextPanel(class [PresentationFramework]System.Windows.Controls.Grid g, bool rtlOnGrid, bool rtlOnChild)
			{
				ret
			}
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.Controls.Grid TestWithFlowPanel(class [PresentationFramework]System.Windows.Controls.Grid g, bool rtlOnGrid, bool rtlOnChild)
			{
				ret
			}
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.Controls.Grid TestWithCanvas(class [PresentationFramework]System.Windows.Controls.Grid g, bool rtlOnGrid, bool rtlOnChild)
			{
				ret
			}
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.Controls.Grid TestWithDockPanel(class [PresentationFramework]System.Windows.Controls.Grid g, bool rtlOnGrid, bool rtlOnChild)
			{
				ret
			}
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.Controls.Grid TestWithButton(class [PresentationFramework]System.Windows.Controls.Grid g, bool rtlOnGrid, bool rtlOnChild)
			{
				ret
			}
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.Controls.Grid TestWithTextBox(class [PresentationFramework]System.Windows.Controls.Grid g, bool rtlOnGrid, bool rtlOnChild)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
		}
		.class nested public GridRelayoutOnContentChangeTestCommon
			extends [mscorlib]System.Object
		{
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.FrameworkElement CommonContent()
			{
				ret
			}
			.method public static hidebysig 
				void OnLayoutUpdatedOccured(object sender, class [mscorlib]System.EventArgs e)
			{
				ret
			}
			.method public static hidebysig 
				bool GridRelayoutOnContentChangeTestVerifier(class [PresentationFramework]System.Windows.Controls.Grid _grid, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.field static public bool relayoutOccurred
			.field static public bool result
		}
		.class nested public GridRelayoutOnPropertyChangeTestCommon
			extends [mscorlib]System.Object
		{
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.FrameworkElement CommonContent()
			{
				ret
			}
			.method public static hidebysig 
				void OnLayoutUpdatedOccured(object sender, class [mscorlib]System.EventArgs e)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.field static public bool relayoutOccurred
		}
		.class nested public GridResizingOffsetTestCommon
			extends [mscorlib]System.Object
		{
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.FrameworkElement CommonContent()
			{
				ret
			}
			.method public static hidebysig 
				void ResizeWindow(class [PresentationFramework]System.Windows.Window _w, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
			{
				ret
			}
			.method public static hidebysig 
				void GridResizingOffsetTestVerifier(class [PresentationFramework]System.Windows.Controls.Grid g, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
			{
				ret
			}
			.method public static hidebysig 
				bool CompareValues(valuetype [WindowsBase]System.Windows.Point[] exp, valuetype [WindowsBase]System.Windows.Point[] act)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.field static public bool result
		}
		.class nested public GridResizingSpanningTestCommon
			extends [mscorlib]System.Object
		{
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.FrameworkElement CommonContent()
			{
				ret
			}
			.method public static hidebysig 
				void ResizeWindow(class [PresentationFramework]System.Windows.Window _w, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
			{
				ret
			}
			.method public static hidebysig 
				void GridResizingSpanningTestVerifier(class [PresentationFramework]System.Windows.Controls.Grid g, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
			{
				ret
			}
			.method public static hidebysig 
				bool ComareValues(valuetype [WindowsBase]System.Windows.Size[] exp, valuetype [WindowsBase]System.Windows.Size[] act)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.field static public bool result
		}
		.class nested public GridResizingVariousObjectTestCommon
			extends [mscorlib]System.Object
		{
			.method public static hidebysig 
				class [PresentationFramework]System.Windows.FrameworkElement CommonContent()
			{
				ret
			}
			.method public static hidebysig 
				void ResizeWindow(class [PresentationFramework]System.Windows.Window _w, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
			{
				ret
			}
			.method public static hidebysig 
				void GridResizingVariousObjectTestVerifier(class [PresentationFramework]System.Windows.Controls.Grid g, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
			{
				ret
			}
			.method public static hidebysig 
				bool ComareValues(valuetype [WindowsBase]System.Windows.Size[] exp, valuetype [WindowsBase]System.Windows.Size[] act)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.field static public bool result
		}
		.class nested public GridResizingWidthHeightTestCommon
			extends [mscorlib]System.Object
		{
			.method public static hidebysig 
				void ResizeWindow(class [PresentationFramework]System.Windows.Window _w, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
			{
				ret
			}
			.method public static hidebysig 
				void GridResizingWidthHeightTestVerifier(class [PresentationFramework]System.Windows.Controls.Grid g, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.field static public float64[] expectedValuesC
			.field static public float64[] expectedValuesR
			.field static public int32 failCount
			.field static public int32 resizeCount
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.Controls.Grid CreateGrid()
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.Controls.Grid CreateGrid(int32 column, int32 row)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.Controls.Grid CreateGrid(int32 column, int32 row, valuetype [PresentationFramework]System.Windows.GridLength[] columnWidth, valuetype [PresentationFramework]System.Windows.GridLength[] rowHeight)
		{
			ret
		}
		.method public static hidebysig 
			void SettingColumnWidth(class [PresentationFramework]System.Windows.Controls.Grid g, valuetype [PresentationFramework]System.Windows.GridLength[] width)
		{
			ret
		}
		.method public static hidebysig 
			void SettingRowHeight(class [PresentationFramework]System.Windows.Controls.Grid g, valuetype [PresentationFramework]System.Windows.GridLength[] height)
		{
			ret
		}
		.method public static hidebysig 
			void SettingColumnMinWidth(class [PresentationFramework]System.Windows.Controls.Grid g, float64[] minWidth)
		{
			ret
		}
		.method public static hidebysig 
			void SettingRowMinHeight(class [PresentationFramework]System.Windows.Controls.Grid g, float64[] minHeight)
		{
			ret
		}
		.method public static hidebysig 
			void SettingColumnMaxWidth(class [PresentationFramework]System.Windows.Controls.Grid g, float64[] maxWidth)
		{
			ret
		}
		.method public static hidebysig 
			void SettingRowMaxHeight(class [PresentationFramework]System.Windows.Controls.Grid g, float64[] maxHeight)
		{
			ret
		}
		.method public static hidebysig 
			void SettingSpan(class [PresentationCore]System.Windows.UIElement element, int32 columnSpan, int32 rowSpan)
		{
			ret
		}
		.method public static hidebysig 
			void PlacingChild(class [PresentationFramework]System.Windows.Controls.Grid g, class [PresentationCore]System.Windows.UIElement element, int32 column, int32 row)
		{
			ret
		}
		.method public static hidebysig 
			void PlacingChild(class [PresentationFramework]System.Windows.Controls.Grid g, class [PresentationCore]System.Windows.UIElement element, int32 column, int32 row, bool addAsChildToGrid)
		{
			ret
		}
		.method public static hidebysig 
			void PlacingChild(class [PresentationFramework]System.Windows.Controls.Grid g, class [PresentationCore]System.Windows.UIElement element, int32 column, int32 row, float64 top, float64 left)
		{
			ret
		}
		.method public static hidebysig 
			void PlacingChild(class [PresentationFramework]System.Windows.Controls.Grid g, class [PresentationCore]System.Windows.UIElement element, int32 column, int32 row, float64 top, float64 left, float64 right, float64 bottom)
		{
			ret
		}
		.method public static hidebysig 
			void SettingOffset(class [PresentationCore]System.Windows.UIElement element, float64 left, float64 top)
		{
			ret
		}
		.method public static hidebysig 
			void SettingOffset(class [PresentationCore]System.Windows.UIElement element, float64 left, float64 top, float64 right, float64 bottom)
		{
			ret
		}
		.method public static hidebysig 
			void SettingAlignment(class [PresentationCore]System.Windows.UIElement element, valuetype [PresentationFramework]System.Windows.HorizontalAlignment h)
		{
			ret
		}
		.method public static hidebysig 
			void SettingAlignment(class [PresentationCore]System.Windows.UIElement element, valuetype [PresentationFramework]System.Windows.VerticalAlignment v)
		{
			ret
		}
		.method public static hidebysig 
			void SettingAlignment(class [PresentationCore]System.Windows.UIElement element, valuetype [PresentationFramework]System.Windows.HorizontalAlignment h, valuetype [PresentationFramework]System.Windows.VerticalAlignment v)
		{
			ret
		}
		.method public static hidebysig 
			void AddingRectangle(class [PresentationFramework]System.Windows.Controls.Grid g, float64[] size, class [PresentationCore]System.Windows.Media.SolidColorBrush[] background, bool column, bool row)
		{
			ret
		}
		.method public static hidebysig 
			void AddingCommonRectangle(class [PresentationFramework]System.Windows.Controls.Grid g, float64 size)
		{
			ret
		}
		.method public static hidebysig 
			float64[] GettingActualColumnWidth(class [PresentationFramework]System.Windows.Controls.Grid g)
		{
			ret
		}
		.method public static hidebysig 
			float64[] GettingActualRowHeight(class [PresentationFramework]System.Windows.Controls.Grid g)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point[] SettingExpectedPosition(class [PresentationFramework]System.Windows.Controls.Grid g)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point[] GettingActualPosition(class [PresentationFramework]System.Windows.Controls.Grid g)
		{
			ret
		}
		.method public static hidebysig 
			float64 TotalColumnWidth(class [PresentationFramework]System.Windows.Controls.Grid g)
		{
			ret
		}
		.method public static hidebysig 
			float64 TotalColumnWidth(class [PresentationFramework]System.Windows.Controls.Grid g, int32 col)
		{
			ret
		}
		.method public static hidebysig 
			float64 TotalRowHeight(class [PresentationFramework]System.Windows.Controls.Grid g)
		{
			ret
		}
		.method public static hidebysig 
			float64 TotalRowHeight(class [PresentationFramework]System.Windows.Controls.Grid g, int32 row)
		{
			ret
		}
		.method public static hidebysig 
			bool GridRowDefinitionExceptionThrownTestVerifier(class [mscorlib]System.Type e, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
		{
			ret
		}
		.method public static hidebysig 
			bool GridColumnDefinitionExceptionThrownTestVerifier(class [mscorlib]System.Type e, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public abstract sealed Helpers
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			void Log(string s)
		{
			ret
		}
		.method public static hidebysig 
			void Log(float64 d)
		{
			ret
		}
		.method public static hidebysig 
			void Log(int32 i)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.ResourceDictionary LoadStyle(string filename)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement LoadContent(string filename)
		{
			ret
		}
		.method public static hidebysig 
			void AdjustWindowContentSize(class [PresentationFramework]System.Windows.Window w)
		{
			ret
		}
		.field static public string[] ElementList
	}
	.class public InfinityArrangePanel
		extends [PresentationFramework]System.Windows.Controls.Panel
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size ArrangeOverride(valuetype [WindowsBase]System.Windows.Size arrangeSize)
		{
			ret
		}
		.field public bool result
	}
	.class public LayoutTransformHelpers
		extends [mscorlib]System.Object
	{
		.class nested public PlotPanel
			extends [PresentationFramework]System.Windows.Controls.Panel
		{
			.method public hidebysig specialname 
				instance void .ctor()
			{
				ret
			}
			.method family virtual hidebysig 
				instance valuetype [WindowsBase]System.Windows.Size MeasureOverride(valuetype [WindowsBase]System.Windows.Size availableSize)
			{
				ret
			}
			.method family virtual hidebysig 
				instance valuetype [WindowsBase]System.Windows.Size ArrangeOverride(valuetype [WindowsBase]System.Windows.Size finalSize)
			{
				ret
			}
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement AddingChild(string childElement)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.Style CreateRadioButtonListStyle()
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement AlignmentTestContent(string testStr)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public MeasureReturnsNaNPanel
		extends [PresentationFramework]System.Windows.Controls.Panel
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size MeasureOverride(valuetype [WindowsBase]System.Windows.Size constraint)
		{
			ret
		}
	}
	.class public NaNArrangePanel
		extends [PresentationFramework]System.Windows.Controls.Panel
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size ArrangeOverride(valuetype [WindowsBase]System.Windows.Size arrangeSize)
		{
			ret
		}
		.field public bool result
	}
	.class public NaNMeasurePanel
		extends [PresentationFramework]System.Windows.Controls.Panel
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size MeasureOverride(valuetype [WindowsBase]System.Windows.Size constraint)
		{
			ret
		}
		.field public bool result
	}
	.class public PropertyTestHelpers
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement AddTestContent(string _TestElement)
		{
			ret
		}
		.method public static hidebysig 
			void doublePropertyTest(class [PresentationFramework]System.Windows.FrameworkElement child, bool TestResult, string failing_test, class [WindowsBase]System.Windows.DependencyProperty dp, string testType, float64 dpValue)
		{
			ret
		}
		.method public static hidebysig 
			void propertyTest(class [PresentationFramework]System.Windows.FrameworkElement child, string failingtest, bool TestResult, class [WindowsBase]System.Windows.DependencyProperty dp, string testType, object dpValue)
		{
			ret
		}
		.method public static hidebysig 
			void restoreValue(class [PresentationFramework]System.Windows.FrameworkElement child, class [WindowsBase]System.Windows.DependencyProperty dp)
		{
			ret
		}
		.method public static hidebysig 
			void ValidateValue(class [WindowsBase]System.Windows.DependencyProperty dp, object dpValue, string testType, class [PresentationFramework]System.Windows.FrameworkElement child, string failingTest, bool TestResult)
		{
			ret
		}
		.method public static hidebysig 
			void ValidateExcetpion(class [WindowsBase]System.Windows.DependencyProperty dp, object dpValue, string exceptionMessage, string testType, string failingTest, bool testResult)
		{
			ret
		}
		.method public static hidebysig 
			void ValidateDoubleValue(class [PresentationFramework]System.Windows.FrameworkElement child, class [WindowsBase]System.Windows.DependencyProperty dp, float64 dpValue, string testType, string failingTest, bool TestResult)
		{
			ret
		}
		.method public static hidebysig 
			void ValidateDoubleExcetpion(class [WindowsBase]System.Windows.DependencyProperty dp, float64 dpValue, string exceptionMessage, string testType, string failingTest, bool testResult)
		{
			ret
		}
		.method public static hidebysig 
			void ScenarioTests(string failingTest, bool TestResult, int32 childCount, class [PresentationFramework]System.Windows.FrameworkElement root, class [PresentationFramework]System.Windows.FrameworkElement child)
		{
			ret
		}
		.method public static hidebysig 
			void Scenarios(string failingTest, bool TestResult, int32 childCount, class [PresentationFramework]System.Windows.FrameworkElement _Parent, class [PresentationFramework]System.Windows.FrameworkElement _Child, string _TestType)
		{
			ret
		}
		.method public static hidebysig 
			void ValidateScenarios(string failingTest, bool TestResult, class [PresentationFramework]System.Windows.FrameworkElement _Parent, class [PresentationFramework]System.Windows.FrameworkElement _Child, string _TestType, int32 _ChildCount)
		{
			ret
		}
		.method public static hidebysig 
			void PanelSpecificCases(class [PresentationFramework]System.Windows.FrameworkElement child, string failingtest, bool TestResult)
		{
			ret
		}
		.method public static hidebysig 
			void propertyOnChildTest(string failingtest, bool TestResult, class [WindowsBase]System.Windows.DependencyProperty dp, string testType, object dpValue, class [PresentationFramework]System.Windows.FrameworkElement _TestChild)
		{
			ret
		}
		.method public static hidebysig 
			void ValidateValueOnChild(string failingTest, bool TestResult, class [WindowsBase]System.Windows.DependencyProperty dp, object dpValue, string testType, class [PresentationFramework]System.Windows.FrameworkElement _TestChild)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationCore]System.Windows.Media.Transform TestTransform()
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationCore]System.Windows.Media.Geometry TestClipGeometry()
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.Shapes.Rectangle TestChildToAdd()
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public ScrollTestCommon
		extends [mscorlib]System.Object
	{
		.class nested public sequential sealed LayoutTestResult
			extends [mscorlib]System.ValueType
		{
			.field public bool result
			.field public string message
		}
		.class nested public sequential sealed ScrollerVisibilities
			extends [mscorlib]System.ValueType
		{
			.method public hidebysig specialname 
				instance void .ctor(class [PresentationFramework]System.Windows.Controls.ScrollViewer sv)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor(valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility svX, valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility svY)
			{
				ret
			}
			.field public valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility horizontal
			.field public valuetype [PresentationFramework]System.Windows.Controls.ScrollBarVisibility vertical
		}
		.class nested public sequential sealed ThumbPosition
			extends [mscorlib]System.ValueType
		{
			.method public hidebysig specialname 
				instance void .ctor(class [PresentationFramework]System.Windows.Controls.ScrollViewer sv)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor(float64 tpX, float64 tpY)
			{
				ret
			}
			.field public float64 ThumbPositionX
			.field public float64 ThumbPositionY
		}
		.class nested public sequential sealed ThumbSize
			extends [mscorlib]System.ValueType
		{
			.method public hidebysig specialname 
				instance void .ctor(class [PresentationFramework]System.Windows.Controls.ScrollViewer sv)
			{
				ret
			}
			.method public hidebysig specialname 
				instance void .ctor(float64 tsX, float64 tsY)
			{
				ret
			}
			.field public float64 thumSizeX
			.field public float64 thumSizeY
		}
		.class nested public sequential sealed TrackLength
			extends [mscorlib]System.ValueType
		{
			.method public hidebysig specialname 
				instance void .ctor(class [PresentationFramework]System.Windows.Controls.ScrollViewer sv)
			{
				ret
			}
			.field public float64 TrackLengthX
			.field public float64 TrackLengthY
		}
		.method public static hidebysig 
			float64 VerticalScrollBarSize(class [PresentationFramework]System.Windows.Controls.ScrollViewer sv)
		{
			ret
		}
		.method public static hidebysig 
			float64 HorizontalScrollBarSize(class [PresentationFramework]System.Windows.Controls.ScrollViewer sv)
		{
			ret
		}
		.method public static hidebysig 
			valuetype ElementLayout.TestLibrary.ScrollTestCommon/ScrollerVisibilities GetExpectedScrollerVisibilities(class [PresentationFramework]System.Windows.Controls.ScrollViewer sv)
		{
			ret
		}
		.method public static hidebysig 
			valuetype ElementLayout.TestLibrary.ScrollTestCommon/ThumbSize GetExpectedThumSize(class [PresentationFramework]System.Windows.Controls.ScrollViewer sv)
		{
			ret
		}
		.method public static hidebysig 
			valuetype [WindowsBase]System.Windows.Point SVContentPosition(class [PresentationFramework]System.Windows.Controls.ScrollViewer sv)
		{
			ret
		}
		.method public static hidebysig 
			bool Equal(valuetype ElementLayout.TestLibrary.ScrollTestCommon/ScrollerVisibilities actual, valuetype ElementLayout.TestLibrary.ScrollTestCommon/ScrollerVisibilities expected)
		{
			ret
		}
		.method public static hidebysig 
			bool Equal(valuetype ElementLayout.TestLibrary.ScrollTestCommon/ThumbSize actual, valuetype ElementLayout.TestLibrary.ScrollTestCommon/ThumbSize expected)
		{
			ret
		}
		.method public static hidebysig 
			bool Equal(valuetype [WindowsBase]System.Windows.Point actual, valuetype [WindowsBase]System.Windows.Point expected)
		{
			ret
		}
		.method public static hidebysig 
			bool Equal(float64 actual, float64 expected)
		{
			ret
		}
		.method public static hidebysig 
			string GetFailureMsg(valuetype ElementLayout.TestLibrary.ScrollTestCommon/ScrollerVisibilities actual, valuetype ElementLayout.TestLibrary.ScrollTestCommon/ScrollerVisibilities expected)
		{
			ret
		}
		.method public static hidebysig 
			string GetFailureMsg(valuetype ElementLayout.TestLibrary.ScrollTestCommon/ThumbSize actual, valuetype ElementLayout.TestLibrary.ScrollTestCommon/ThumbSize expected)
		{
			ret
		}
		.method public static hidebysig 
			string GetFailureMsg(valuetype [WindowsBase]System.Windows.Point actual, valuetype [WindowsBase]System.Windows.Point expected)
		{
			ret
		}
		.method public static hidebysig 
			string GetFailureMsg(float64 actual, float64 expected)
		{
			ret
		}
		.method public static hidebysig 
			int32 RandomScrollAmount(class [PresentationFramework]System.Windows.Controls.ScrollViewer scroll)
		{
			ret
		}
		.method public static hidebysig 
			void ScrollLeft(int32 _ScrollAmount, class [PresentationFramework]System.Windows.Controls.ScrollViewer scroll)
		{
			ret
		}
		.method public static hidebysig 
			void ScrollRight(int32 _ScrollAmount, class [PresentationFramework]System.Windows.Controls.ScrollViewer scroll)
		{
			ret
		}
		.method public static hidebysig 
			void ScrollUp(int32 _ScrollAmount, class [PresentationFramework]System.Windows.Controls.ScrollViewer scroll)
		{
			ret
		}
		.method public static hidebysig 
			void ScrollDown(int32 _ScrollAmount, class [PresentationFramework]System.Windows.Controls.ScrollViewer scroll)
		{
			ret
		}
		.method public static hidebysig 
			valuetype ElementLayout.TestLibrary.ScrollTestCommon/LayoutTestResult Verification(class [PresentationFramework]System.Windows.Controls.ScrollViewer sv)
		{
			ret
		}
		.method public static hidebysig 
			valuetype ElementLayout.TestLibrary.ScrollTestCommon/LayoutTestResult VerifyWithThumb(class [PresentationFramework]System.Windows.Controls.ScrollViewer sv)
		{
			ret
		}
		.method public static hidebysig 
			valuetype ElementLayout.TestLibrary.ScrollTestCommon/LayoutTestResult VerifyWithScrollBarSize(class [PresentationFramework]System.Windows.Controls.ScrollViewer sv, class [mscorlib]System.Type 'type')
		{
			ret
		}
		.method public static hidebysig 
			void AddMoreContent(class [PresentationFramework]System.Windows.Controls.WrapPanel w)
		{
			ret
		}
		.method public static hidebysig 
			void RemoveContent(class [PresentationFramework]System.Windows.Controls.WrapPanel w)
		{
			ret
		}
		.method public static hidebysig 
			void AddRectangle(class [PresentationFramework]System.Windows.Controls.ScrollViewer sv, class [PresentationFramework]System.Windows.Shapes.Rectangle rect)
		{
			ret
		}
		.method public static hidebysig 
			void AddScrollViewerContent(string _TestElement, class [PresentationFramework]System.Windows.Controls.ScrollViewer scroll)
		{
			ret
		}
		.method public static hidebysig 
			class [PresentationFramework]System.Windows.FrameworkElement AddScrollViewerContent(string _TestElement)
		{
			ret
		}
		.method public static hidebysig 
			void ChangeToLeftyScroll(class [PresentationFramework]System.Windows.Window w)
		{
			ret
		}
		.method public static hidebysig 
			valuetype ElementLayout.TestLibrary.ScrollTestCommon/LayoutTestResult ScrollBarVerification(class [PresentationFramework]System.Windows.FrameworkElement eRoot, valuetype ElementLayout.TestLibrary.ScrollTestCommon/ScrollerVisibilities expected)
		{
			ret
		}
		.method public static hidebysig 
			valuetype ElementLayout.TestLibrary.ScrollTestCommon/LayoutTestResult ContentPositionVerification(class [PresentationFramework]System.Windows.FrameworkElement eRoot, valuetype ElementLayout.TestLibrary.ScrollTestCommon/ScrollerVisibilities expected)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.field static public literal float64 lineButtonDefaultSize = float64(0x4030000000000000)
		.field static public literal float64 minThumbSize = float64(0x4020000000000000)
	}
	.class public StackPanelCommon
		extends [mscorlib]System.Object
	{
		.method public static hidebysig 
			bool VerifyHorizontalStacking(string testPanel, class [PresentationFramework]System.Windows.Controls.StackPanel root, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
		{
			ret
		}
		.method public static hidebysig 
			bool VerifyVerticalStacking(string testPanel, class [PresentationFramework]System.Windows.Controls.StackPanel root, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
		{
			ret
		}
		.method public static hidebysig 
			void AddChildren(int32 ChildCount, string ChildType, class [PresentationFramework]System.Windows.Controls.StackPanel root, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
		{
			ret
		}
		.method public static hidebysig 
			void AddSizedChildren(int32 ChildCount, string SizeType, class [PresentationFramework]System.Windows.Controls.StackPanel stack, class [TestRuntime]Microsoft.Test.Logging.TestLog log)
		{
			ret
		}
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
	}
	.class public TestPanel
		extends [PresentationFramework]System.Windows.Controls.Panel
	{
		.method public hidebysig specialname 
			instance void .ctor()
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size MeasureOverride(valuetype [WindowsBase]System.Windows.Size constraint)
		{
			ret
		}
		.method family virtual hidebysig 
			instance valuetype [WindowsBase]System.Windows.Size ArrangeOverride(valuetype [WindowsBase]System.Windows.Size arrangeSize)
		{
			ret
		}
	}
}
